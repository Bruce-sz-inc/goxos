// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

package client

import proto "github.com/relab/goxos/Godeps/_workspace/src/code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Request_Type int32

const (
	Request_HELLO Request_Type = 1
	Request_EXEC  Request_Type = 2
)

var Request_Type_name = map[int32]string{
	1: "HELLO",
	2: "EXEC",
}
var Request_Type_value = map[string]int32{
	"HELLO": 1,
	"EXEC":  2,
}

func (x Request_Type) Enum() *Request_Type {
	p := new(Request_Type)
	*p = x
	return p
}
func (x Request_Type) String() string {
	return proto.EnumName(Request_Type_name, int32(x))
}
func (x Request_Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Request_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Request_Type_value, data, "Request_Type")
	if err != nil {
		return err
	}
	*x = Request_Type(value)
	return nil
}

type Response_Type int32

const (
	Response_HELLO_RESP Response_Type = 1
	Response_EXEC_RESP  Response_Type = 2
)

var Response_Type_name = map[int32]string{
	1: "HELLO_RESP",
	2: "EXEC_RESP",
}
var Response_Type_value = map[string]int32{
	"HELLO_RESP": 1,
	"EXEC_RESP":  2,
}

func (x Response_Type) Enum() *Response_Type {
	p := new(Response_Type)
	*p = x
	return p
}
func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}
func (x Response_Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Response_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Type_value, data, "Response_Type")
	if err != nil {
		return err
	}
	*x = Response_Type(value)
	return nil
}

type Response_Protocol int32

const (
	Response_UNKNOWN    Response_Protocol = 0
	Response_MULTIPAXOS Response_Protocol = 1
	Response_FASTPAXOS  Response_Protocol = 2
	Response_BATCHPAXOS Response_Protocol = 3
)

var Response_Protocol_name = map[int32]string{
	0: "UNKNOWN",
	1: "MULTIPAXOS",
	2: "FASTPAXOS",
	3: "BATCHPAXOS",
}
var Response_Protocol_value = map[string]int32{
	"UNKNOWN":    0,
	"MULTIPAXOS": 1,
	"FASTPAXOS":  2,
	"BATCHPAXOS": 3,
}

func (x Response_Protocol) Enum() *Response_Protocol {
	p := new(Response_Protocol)
	*p = x
	return p
}
func (x Response_Protocol) String() string {
	return proto.EnumName(Response_Protocol_name, int32(x))
}
func (x Response_Protocol) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Response_Protocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Protocol_value, data, "Response_Protocol")
	if err != nil {
		return err
	}
	*x = Response_Protocol(value)
	return nil
}

type Response_Error int32

const (
	Response_NONE        Response_Error = 0
	Response_REDIRECT    Response_Error = 1
	Response_INVALID_ID  Response_Error = 2
	Response_MISSING_ID  Response_Error = 3
	Response_MISSING_TAG Response_Error = 4
	Response_MISSING_VAL Response_Error = 5
	Response_OLD_CMD     Response_Error = 6
	Response_OTHER       Response_Error = 15
)

var Response_Error_name = map[int32]string{
	0:  "NONE",
	1:  "REDIRECT",
	2:  "INVALID_ID",
	3:  "MISSING_ID",
	4:  "MISSING_TAG",
	5:  "MISSING_VAL",
	6:  "OLD_CMD",
	15: "OTHER",
}
var Response_Error_value = map[string]int32{
	"NONE":        0,
	"REDIRECT":    1,
	"INVALID_ID":  2,
	"MISSING_ID":  3,
	"MISSING_TAG": 4,
	"MISSING_VAL": 5,
	"OLD_CMD":     6,
	"OTHER":       15,
}

func (x Response_Error) Enum() *Response_Error {
	p := new(Response_Error)
	*p = x
	return p
}
func (x Response_Error) String() string {
	return proto.EnumName(Response_Error_name, int32(x))
}
func (x Response_Error) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Response_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Error_value, data, "Response_Error")
	if err != nil {
		return err
	}
	*x = Response_Error(value)
	return nil
}

type Request struct {
	Type             *Request_Type `protobuf:"varint,1,req,name=type,enum=client.Request_Type" json:"type,omitempty"`
	Id               *string       `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Seq              *uint32       `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	Val              []byte        `protobuf:"bytes,4,opt,name=val" json:"val,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (this *Request) Reset()         { *this = Request{} }
func (this *Request) String() string { return proto.CompactTextString(this) }
func (*Request) ProtoMessage()       {}

func (this *Request) GetType() Request_Type {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Request) GetId() string {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return ""
}

func (this *Request) GetSeq() uint32 {
	if this != nil && this.Seq != nil {
		return *this.Seq
	}
	return 0
}

func (this *Request) GetVal() []byte {
	if this != nil {
		return this.Val
	}
	return nil
}

type Response struct {
	Type             *Response_Type     `protobuf:"varint,1,req,name=type,enum=client.Response_Type" json:"type,omitempty"`
	Id               *string            `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Seq              *uint32            `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	Val              []byte             `protobuf:"bytes,4,opt,name=val" json:"val,omitempty"`
	Protocol         *Response_Protocol `protobuf:"varint,5,opt,name=protocol,enum=client.Response_Protocol" json:"protocol,omitempty"`
	ErrorCode        *Response_Error    `protobuf:"varint,14,opt,name=error_code,enum=client.Response_Error,def=0" json:"error_code,omitempty"`
	ErrorDetail      *string            `protobuf:"bytes,15,opt,name=error_detail" json:"error_detail,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (this *Response) Reset()         { *this = Response{} }
func (this *Response) String() string { return proto.CompactTextString(this) }
func (*Response) ProtoMessage()       {}

const Default_Response_ErrorCode Response_Error = Response_NONE

func (this *Response) GetType() Response_Type {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Response) GetId() string {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return ""
}

func (this *Response) GetSeq() uint32 {
	if this != nil && this.Seq != nil {
		return *this.Seq
	}
	return 0
}

func (this *Response) GetVal() []byte {
	if this != nil {
		return this.Val
	}
	return nil
}

func (this *Response) GetProtocol() Response_Protocol {
	if this != nil && this.Protocol != nil {
		return *this.Protocol
	}
	return 0
}

func (this *Response) GetErrorCode() Response_Error {
	if this != nil && this.ErrorCode != nil {
		return *this.ErrorCode
	}
	return Default_Response_ErrorCode
}

func (this *Response) GetErrorDetail() string {
	if this != nil && this.ErrorDetail != nil {
		return *this.ErrorDetail
	}
	return ""
}

func init() {
	proto.RegisterEnum("client.Request_Type", Request_Type_name, Request_Type_value)
	proto.RegisterEnum("client.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("client.Response_Protocol", Response_Protocol_name, Response_Protocol_value)
	proto.RegisterEnum("client.Response_Error", Response_Error_name, Response_Error_value)
}
